<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Habtshi Blogs</title>
    <link rel="stylesheet" href="/css/Read.css">
    <style>
        .like-btn {
            color: black;
            background-color: transparent;
            border: 1px solid black;
            padding: 5px 10px;
            cursor: pointer;
        }
        .like-btn.liked {
            color: white;
            background-color: blue;
        }
        .comment-section {
            margin-top: 20px;
            border-top: 1px solid #ccc;
            padding-top: 10px;
        }
        .comment-box {
            display: flex;
            align-items: flex-start;
            margin-bottom: 10px;
        }
        .comment-icon {
            width: 40px;
            height: 40px;
            background-color: gray;
            border-radius: 50%;
            margin-right: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 20px;
        }
        .comment-content {
            flex-grow: 1;
        }
        .add-comment {
            margin-bottom: 20px;
        }
        textarea.comment-input {
            width: 100%;
            height: 50px;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <h1>Habtshi Blogs</h1>
    <div class="blogs">
        <% files.forEach(function(file, index) { %>
            <button onclick="displayBlog('<%= file.pk %>' , '<%= file.id %>', '<%= file.blog %>', <%= JSON.stringify(file.images) %>, <%= JSON.stringify(file.comments || []) %>)">
                <%= file.blog_topic %>
            </button><br>
        <% }) %>
    </div>
    <div>
        <textarea name="main" id="main" placeholder="Your blog" disabled></textarea>
        <button id="likeButton" class="like-btn" onclick="toggleLike()">Like</button>

        <div class="comment-section">
            <h2>Comments</h2>
            <div class="add-comment">
                <textarea id="newComment" class="comment-input" placeholder="Add a comment..."></textarea>
                <button onclick="addComment()">Add Comment</button>
            </div>
            <div id="commentList"></div>
        </div>

        <h2>Image Previews:</h2>
        <div id="imagePreviewContainer"></div>
    </div>

    <script>
       let liked = false;
let currentBlogId = null;
let currentPk = null;

async function toggleLike() {
    const likeButton = document.getElementById('likeButton');
    liked = !liked;
    likeButton.classList.toggle('liked', liked);
    likeButton.textContent = liked ? 'Liked' : 'Like';

    // Send like status to server
    if (currentBlogId && currentPk) {
        await sendToServer({
            pk: currentPk, // Include pk
            blogId: currentBlogId,
            like: liked,
            comments: [] // No new comments, just like status
        });
    }
}

async function displayBlog(pk, blogId, blogContent, images, comments) {
    currentPk = pk; // Track the current pk
    currentBlogId = blogId; // Track the current blog
    document.getElementById('main').value = blogContent;

    // Clear image previews
    const previewContainer = document.getElementById('imagePreviewContainer');
    previewContainer.innerHTML = '';

    // Display images
    images.forEach(imageBuffer => {
        const img = document.createElement('img');
        img.src = 'data:image/png;base64,' + arrayBufferToBase64(imageBuffer.data);
        img.style.maxWidth = '300px';
        img.style.margin = '10px';
        previewContainer.appendChild(img);
    });

    // Display comments
    const commentList = document.getElementById('commentList');
    commentList.innerHTML = '';
    comments.forEach(comment => {
        const commentBox = createCommentBox(comment);
        commentList.appendChild(commentBox);
    });

    // Reset like button
    liked = false;
    const likeButton = document.getElementById('likeButton');
    likeButton.classList.remove('liked');
    likeButton.textContent = 'Like';
}

async function addComment() {
    const newComment = document.getElementById('newComment').value;
    if (newComment.trim() === '') return;

    const commentList = document.getElementById('commentList');
    const commentBox = createCommentBox(newComment);
    commentList.prepend(commentBox); // Add new comment at the top

    document.getElementById('newComment').value = ''; // Clear the input

    // Send comment to server
    if (currentBlogId && currentPk) {
        await sendToServer({
            pk: currentPk, // Include pk
            blogId: currentBlogId,
            like: liked,
            comments: [newComment] // Send the new comment
        });
    }
}

function createCommentBox(comment) {
    const commentBox = document.createElement('div');
    commentBox.className = 'comment-box';

    const icon = document.createElement('div');
    icon.className = 'comment-icon';
    icon.textContent = 'ðŸ‘¤'; // Placeholder for a person icon
    commentBox.appendChild(icon);

    const content = document.createElement('div');
    content.className = 'comment-content';
    content.textContent = comment;
    commentBox.appendChild(content);

    return commentBox;
}

function arrayBufferToBase64(buffer) {
    let binary = '';
    const bytes = new Uint8Array(buffer);
    const len = bytes.byteLength;
    for (let i = 0; i < len; i++) {
        binary += String.fromCharCode(bytes[i]);
    }
    return window.btoa(binary);
}

async function sendToServer(data) {
    try {
        const response = await fetch('/blog-interaction', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
        });
        if (!response.ok) {
            console.error('Error sending data:', response.statusText);
        }
    } catch (error) {
        console.error('Error sending data:', error);
    }
}

    </script>
</body>
</html>
